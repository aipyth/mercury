/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}body{background-color:#f7f5ef}body h2,body h3,body h4,body h5,body p{color:#2c2808;margin:0}body a{text-decoration:none;color:#2c2808;cursor:pointer}.header{padding:0 10px;background-color:#b5fed9;display:flex;max-height:10vh;padding:10px;border-radius:0 0 30px 30px;border-bottom:1px solid #98cbb4;box-shadow:-2px 0 20px 2px #98cbb4;color:#474935}.header .logo{flex-basis:55%;display:flex;align-items:center;justify-content:start}.header .logo h3{margin:0;font-size:30px;border-right:2px solid #474935;padding:8px;padding-left:12px;padding-right:12px}.header .logo h3:last-child{border-right:none}.header .logo img{width:73px;height:73px;margin:-10px 0;margin-right:20px;border-radius:20px;border:2px solid #474935;margin-left:8%}.header .menu{flex-basis:37%;display:flex;flex-flow:row-reverse;margin-right:8%}.header .menu .men{margin-bottom:-9px;display:flex;align-items:center}.header .menu .men a{display:flex;align-items:center;height:100%;transition:all .6s ease}.header .menu .men a:hover{border-bottom:4px solid #423b0b}.header .menu .men-button{font-size:20px;font-weight:700;color:#423b0b}.content{height:86vh;display:flex;width:95%;margin:0 auto}.content .left-side{flex-basis:40%;padding:10px;display:flex;flex-flow:column}.content .left-side .shedule-main{border-radius:20px;background-color:#7ba09879;box-shadow:0 0 10px 5px rgba(206,110,110,.2);padding:10px;margin:20px;flex-basis:100%}.content .left-side .shedule-main .head{display:flex;justify-content:center;background-color:#474935;border-radius:20px 20px 0 0}.content .left-side .shedule-main .head h2{color:#98cbb4}.content .left-side .shedule-main .subjects .subj-section{display:flex;color:#2c2808}.content .left-side .shedule-main .subjects .subj-section .num{display:flex;flex-basis:10%;justify-content:center}.content .left-side .shedule-main .subjects .subj-section .name{display:flex;flex-basis:60%;justify-content:center}.content .left-side .shedule-main .subjects .subj-section .time{display:flex;flex-basis:30%;justify-content:center}.content .left-side .shedule-main .subjects .subj-section:last-child{border-bottom:none}.content .left-side .shedule-main .head{margin:-10px;font-size:20px;padding-top:7px;padding-bottom:7px}.content .left-side .shedule-main .subjects{margin-top:20px;padding-left:15px;padding-right:15px}.content .left-side .shedule-main .subjects .subj-section{display:flex;border-bottom:1.5px solid #423b0b;font-size:18px;padding:4px 0}.content .left-side .shedule-main .subjects .subj-section .num{padding:5px}.content .left-side .shedule-main .subjects .subj-section .name{padding:5px}.content .left-side .shedule-main .subjects .subj-section .time{padding:5px}.content .left-side .shedule-main .tasks{color:#2c2808;padding-left:10px;padding-right:10px}.content .left-side .shedule-main .tasks .tasks-head{display:flex;justify-content:center}.content .left-side .shedule-main .tasks .tasks-head h4{margin:10px;font-size:20px}.content .left-side .shedule-main .tasks .task{padding:5px}.content .left-side .shedule-main .tasks .task h5{font-size:18px;margin-bottom:5px}.content .left-side .shedule-main .tasks .task p{font-size:14px;margin-left:10px}.content .right-side{padding-top:10px;flex-basis:60%;display:flex;flex-wrap:wrap}.content .right-side .shedule{flex-basis:29%;margin:12px;border-radius:20px;background-color:#7ba09879;box-shadow:0 0 10px 5px rgba(206,110,110,.2)}.content .right-side .shedule .head{display:flex;justify-content:center;background-color:#474935;border-radius:20px 20px 0 0}.content .right-side .shedule .head h2{color:#98cbb4}.content .right-side .shedule .subjects .subj-section{display:flex;color:#2c2808}.content .right-side .shedule .subjects .subj-section .num{display:flex;flex-basis:10%;justify-content:center}.content .right-side .shedule .subjects .subj-section .name{display:flex;flex-basis:60%;justify-content:center}.content .right-side .shedule .subjects .subj-section .time{display:flex;flex-basis:30%;justify-content:center}.content .right-side .shedule .subjects .subj-section:last-child{border-bottom:none}.content .right-side .shedule .head{padding-bottom:5px;padding-top:5px}.content .right-side .shedule .subjects{font-size:16px;margin-top:10px;margin:5px 15px}.content .right-side .shedule .subjects .subj-section{padding:4px 0;border-bottom:1px solid #423b0b}.content .right-side .shedule .subjects .subj-section .name{flex-basis:100%;justify-content:start;padding-left:10px}.modal{display:none;position:fixed;top:0;bottom:0;left:0;right:0;background:rgba(0,0,0,.65);justify-content:center;align-items:ceter}.modal .sign-up{display:flex;flex-direction:column;justify-content:center;flex-basis:content}.modal .sign-up .sign-block{border-radius:20px;background-color:#7ba09879;box-shadow:0 0 10px 5px rgba(206,110,110,.2);background-color:#abb8ad;min-width:500px;padding:25px;position:relative}.modal .sign-up .sign-block .cross{display:inline-block;position:absolute;right:4%;top:4%;padding:5px;color:rgba(0,0,0,.5)}.modal .sign-up .sign-block .cross span{font-size:25px}.modal .sign-up .sign-block .cross:hover{color:rgba(0,0,0,.9);cursor:pointer}.modal .sign-up .sign-block .sign-head{font-size:30px;padding-bottom:10px;border-bottom:3px solid #474935;margin:0 40px}.modal .sign-up .sign-block .sign-head h2{color:#474935;text-align:center}.modal .sign-up .sign-block .sign-form{padding-top:50px;padding-bottom:30px;border-bottom:3px solid #474935;margin:0 40px;margin-bottom:37px;justify-content:center}.modal .sign-up .sign-block .sign-form .form{display:flex;margin-bottom:30px;justify-content:center}.modal .sign-up .sign-block .sign-form .form input{flex-basis:90%;font-size:20px;border-radius:10px;border:1px solid #2c2808;padding:5px;background-color:#edf5f1;transition:box-shadow .3s ease}.modal .sign-up .sign-block .sign-form .form input:focus{border-radius:10px;box-shadow:0 0 0 4px solid #2c2808;outline:0}.modal .sign-up .sign-block .sign-form a{border-radius:15px;font-size:25px;background-color:#b5fed9;border:1px solid #000;display:block;width:75%;margin:0 auto;margin-top:40px!important;opacity:.8}.modal .sign-up .sign-block .sign-form a h4{padding:5px;text-align:center;color:#423b0b}.modal .sign-up .sign-block .sign-form a:hover{filter:contrast(85%);opacity:.75}.modal .sign-up .sign-block .sign-form .form:last-child{margin-bottom:0}.vis{display:flex}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
